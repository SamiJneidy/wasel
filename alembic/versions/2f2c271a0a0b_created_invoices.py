"""created invoices

Revision ID: 2f2c271a0a0b
Revises: 3b4abc8d00e0
Create Date: 2025-08-01 21:46:16.306412

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2f2c271a0a0b'
down_revision: Union[str, None] = '3b4abc8d00e0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('invoice_type', sa.Enum('STANDARD', 'SIMPLIFIED', name='invoicetype'), nullable=False),
    sa.Column('invoice_type_code', sa.Enum('CREDIT_NOTE', 'DEBIT_NOTE', 'INVOICE', name='invoicetypecode'), nullable=False),
    sa.Column('issue_date', sa.Date(), nullable=False),
    sa.Column('issue_time', sa.String(length=15), nullable=False),
    sa.Column('document_currency_code', sa.String(length=5), server_default='SAR', nullable=False),
    sa.Column('actual_delivery_date', sa.Date(), nullable=True),
    sa.Column('payment_means_code', sa.Enum('CASH', 'CHEQUE', 'CREDIT_TRANSFER', 'DEBIT_TRANSFER', 'PAYMENT_TO_BANK_ACCOUNT', 'BANK_CARD', name='paymentmeanscode'), nullable=False),
    sa.Column('original_invoice_id', sa.Integer(), nullable=True),
    sa.Column('instruction_note', sa.String(length=4000), nullable=True),
    sa.Column('note', sa.String(length=4000), nullable=True),
    sa.Column('tax_rate', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('classified_tax_category', sa.String(length=5), nullable=False),
    sa.Column('line_extension_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('discount_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('taxable_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('tax_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('tax_inclusive_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('payable_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('xml_invoice', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['original_invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invoices_id'), 'invoices', ['id'], unique=False)
    op.create_table('invoices_customers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('registraion_name', sa.String(length=250), nullable=False),
    sa.Column('vat_number', sa.String(length=20), nullable=True),
    sa.Column('country_code', sa.String(length=5), server_default='SA', nullable=True),
    sa.Column('street', sa.String(length=300), nullable=True),
    sa.Column('building_number', sa.String(length=15), nullable=True),
    sa.Column('division', sa.String(length=200), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=10), nullable=True),
    sa.Column('party_identification_scheme', sa.String(length=10), nullable=False),
    sa.Column('party_identification_value', sa.String(length=30), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invoices_customers_id'), 'invoices_customers', ['id'], unique=False)
    op.create_table('invoices_lines',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=200), nullable=False),
    sa.Column('item_price', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('quantity', sa.DECIMAL(scale=6), nullable=False),
    sa.Column('discount_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('line_extension_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('tax_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('rounding_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('tax_exemption_reason_code', sa.Enum('VATEX_SA_29', 'VATEX_SA_29_7', 'VATEX_SA_30', 'VATEX_SA_32', 'VATEX_SA_33', 'VATEX_SA_34_1', 'VATEX_SA_34_2', 'VATEX_SA_34_3', 'VATEX_SA_34_4', 'VATEX_SA_34_5', 'VATEX_SA_35', 'VATEX_SA_36', 'VATEX_SA_EDU', 'VATEX_SA_HEA', 'VATEX_SA_MLTRY', name='taxexemptionreasoncode'), nullable=True),
    sa.Column('tax_exemption_reason', sa.String(length=4000), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invoices_lines_id'), 'invoices_lines', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_invoices_lines_id'), table_name='invoices_lines')
    op.drop_table('invoices_lines')
    op.drop_index(op.f('ix_invoices_customers_id'), table_name='invoices_customers')
    op.drop_table('invoices_customers')
    op.drop_index(op.f('ix_invoices_id'), table_name='invoices')
    op.drop_table('invoices')
    # ### end Alembic commands ###
