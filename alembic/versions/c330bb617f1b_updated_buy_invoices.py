"""updated buy invoices

Revision ID: c330bb617f1b
Revises: 3edef7fc2021
Create Date: 2025-10-10 03:41:10.177385

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'c330bb617f1b'
down_revision: Union[str, None] = '3edef7fc2021'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    invoice_type_code_enum = postgresql.ENUM(
        'CREDIT_NOTE', 'DEBIT_NOTE', 'INVOICE',
        name='invoicetypecode',
        create_type=False
    )
    payment_means_code_enum = postgresql.ENUM(
        'CASH', 'CHEQUE', 'CREDIT_TRANSFER', 'DEBIT_TRANSFER', 'PAYMENT_TO_BANK_ACCOUNT', 'BANK_CARD', 
        name='paymentmeanscode', 
        create_type=False
    )
    tax_exemption_reason_code_enum = postgresql.ENUM(
        'VATEX_SA_29', 'VATEX_SA_29_7', 'VATEX_SA_30', 'VATEX_SA_32', 'VATEX_SA_33', 'VATEX_SA_34_1', 'VATEX_SA_34_2', 'VATEX_SA_34_3', 'VATEX_SA_34_4', 'VATEX_SA_34_5', 'VATEX_SA_35', 'VATEX_SA_36', 'VATEX_SA_EDU', 'VATEX_SA_HEA', 'VATEX_SA_MLTRY', 
        name='taxexemptionreasoncode',
        create_type=False
    )
    sa.Enum()
    op.create_table('buy_invoices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(length=100), autoincrement=True, nullable=True),
    sa.Column('icv', sa.Integer(), autoincrement=True, nullable=[True]),
    sa.Column('invoice_type_code', invoice_type_code_enum, nullable=False),
    sa.Column('issue_date', sa.Date(), nullable=False),
    sa.Column('document_currency_code', sa.String(length=5), server_default='SAR', nullable=False),
    sa.Column('actual_delivery_date', sa.Date(), nullable=True),
    sa.Column('payment_means_code', payment_means_code_enum, nullable=False),
    sa.Column('original_invoice_id', sa.Integer(), nullable=True),
    sa.Column('instruction_note', sa.String(length=4000), nullable=True),
    sa.Column('note', sa.String(length=4000), nullable=True),
    sa.Column('line_extension_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('discount_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('taxable_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('tax_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('tax_inclusive_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['original_invoice_id'], ['buy_invoices.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_buy_invoices_id'), 'buy_invoices', ['id'], unique=False)
    op.create_table('buy_invoices_lines',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('item_price', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('price_includes_tax', sa.BOOLEAN(), nullable=True),
    sa.Column('quantity', sa.DECIMAL(scale=6), nullable=False),
    sa.Column('discount_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('line_extension_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('tax_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('rounding_amount', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('tax_rate', sa.DECIMAL(scale=2), nullable=False),
    sa.Column('tax_exemption_reason_code', tax_exemption_reason_code_enum, nullable=True),
    sa.Column('tax_exemption_reason', sa.String(length=4000), nullable=True),
    sa.Column('classified_tax_category', sa.String(length=5), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['buy_invoices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_buy_invoices_lines_id'), 'buy_invoices_lines', ['id'], unique=False)
    op.add_column('items', sa.Column('default_sale_price', sa.DECIMAL(scale=2), nullable=True))
    op.add_column('items', sa.Column('default_buy_price', sa.DECIMAL(scale=2), nullable=True))
    op.add_column('items', sa.Column('description', sa.String(length=400), nullable=True))
    op.drop_column('items', 'price')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('items', sa.Column('price', sa.NUMERIC(), autoincrement=False, nullable=False))
    op.drop_column('items', 'description')
    op.drop_column('items', 'default_buy_price')
    op.drop_column('items', 'default_sale_price')
    op.drop_index(op.f('ix_buy_invoices_lines_id'), table_name='buy_invoices_lines')
    op.drop_table('buy_invoices_lines')
    op.drop_index(op.f('ix_buy_invoices_id'), table_name='buy_invoices')
    op.drop_table('buy_invoices')
    # ### end Alembic commands ###
